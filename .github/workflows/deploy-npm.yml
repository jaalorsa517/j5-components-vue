name: deploy

on:
  workflow_run:
    workflows: ["tests"]
    types:
      - completed
  workflow_dispatch:

jobs:
  setup:
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
        # Setup .npmrc file to publish to npm
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"
          always-auth: "true"

  build:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        
      - name: Install dependencies
        run: npm ci

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-j5-components-vue-library
          path: components-vue
          retention-days: 1

  deploy:
    needs:  [build]
    runs-on: ubuntu-latest
    environment:
      name: production

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build-j5-components-vue-library
          path: components-vue

      - name: Publish to npm
        run: npm -v
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
  release:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get version from package.json
        id: get_version
        run: echo "version=$(node -p -e "require('./package.json').version")" >> $GITHUB_OUTPUT
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
